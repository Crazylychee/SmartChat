[
  {
    "syntax": "interface",
    "name": "LongsWithVersion",
    "properties": [
      {
        "name": "longs",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "LongsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "LongsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "LongsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "StringsWithVersion",
    "properties": [
      {
        "name": "strings",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "StringsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "StringsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "StringsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "Value",
    "properties": [
      {
        "name": "int32Value",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "int64Value",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "floatValue",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "doubleValue",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "boolValue",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "bytesValue",
        "type": "Uint8Array | undefined",
        "isOptional": true
      },
      {
        "name": "stringValue",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "listValue",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "Value",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "Value"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "Value",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "Meeting",
    "properties": [
      {
        "name": "id",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "userId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creatorId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "accessToken",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "password",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "startDate",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "endDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "cancelDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "Meeting",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "Meeting"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "Meeting",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "Meetings",
    "properties": [
      {
        "name": "meetings",
        "type": "Meeting[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "Meetings",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "Meetings"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "Meetings",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "ConversationSettings",
    "properties": [
      {
        "name": "userId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "settings",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "ConversationSettings",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "ConversationSettings"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "ConversationSettings",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "ConversationSettingsList",
    "properties": [
      {
        "name": "conversationSettingsList",
        "type": "ConversationSettings[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "ConversationSettingsList",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "ConversationSettingsList"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "ConversationSettingsList",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupConversation",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "memberIdToReadDate",
        "type": "{\n        [key: string]: string;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupConversation",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupConversation"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupConversation",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "PrivateConversation",
    "properties": [
      {
        "name": "ownerId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "targetId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "readDate",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "PrivateConversation",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "PrivateConversation"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "PrivateConversation",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "Conversations",
    "properties": [
      {
        "name": "privateConversations",
        "type": "PrivateConversation[]",
        "isOptional": false
      },
      {
        "name": "groupConversations",
        "type": "GroupConversation[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "Conversations",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "Conversations"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "Conversations",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "enum",
    "name": "RequestStatus",
    "members": [
      "PENDING",
      "ACCEPTED",
      "ACCEPTED_WITHOUT_CONFIRM",
      "DECLINED",
      "IGNORED",
      "EXPIRED",
      "CANCELED",
      "UNRECOGNIZED"
    ]
  },
  {
    "syntax": "interface",
    "name": "GroupInvitation",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "content",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "status",
        "type": "RequestStatus | undefined",
        "isOptional": true
      },
      {
        "name": "expirationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "inviterId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "inviteeId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupInvitation",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupInvitation"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupInvitation",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupInvitationsWithVersion",
    "properties": [
      {
        "name": "groupInvitations",
        "type": "GroupInvitation[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupInvitationsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupInvitationsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupInvitationsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupJoinQuestionsAnswerResult",
    "properties": [
      {
        "name": "score",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "questionIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "joined",
        "type": "boolean",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupJoinQuestionsAnswerResult",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupJoinQuestionsAnswerResult"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupJoinQuestionsAnswerResult",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupJoinQuestion",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "question",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "answers",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "score",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupJoinQuestion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupJoinQuestion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupJoinQuestion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupJoinQuestionsWithVersion",
    "properties": [
      {
        "name": "groupJoinQuestions",
        "type": "GroupJoinQuestion[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupJoinQuestionsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupJoinQuestionsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupJoinQuestionsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupJoinRequest",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "content",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "status",
        "type": "RequestStatus | undefined",
        "isOptional": true
      },
      {
        "name": "expirationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "requesterId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "responderId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupJoinRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupJoinRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupJoinRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupJoinRequestsWithVersion",
    "properties": [
      {
        "name": "groupJoinRequests",
        "type": "GroupJoinRequest[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupJoinRequestsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupJoinRequestsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupJoinRequestsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "enum",
    "name": "DeviceType",
    "members": [
      "DESKTOP",
      "BROWSER",
      "IOS",
      "ANDROID",
      "OTHERS",
      "UNKNOWN",
      "UNRECOGNIZED"
    ]
  },
  {
    "syntax": "enum",
    "name": "GroupMemberRole",
    "members": [
      "OWNER",
      "MANAGER",
      "MEMBER",
      "GUEST",
      "ANONYMOUS_GUEST",
      "UNRECOGNIZED"
    ]
  },
  {
    "syntax": "enum",
    "name": "UserStatus",
    "members": [
      "AVAILABLE",
      "OFFLINE",
      "INVISIBLE",
      "BUSY",
      "DO_NOT_DISTURB",
      "AWAY",
      "BE_RIGHT_BACK",
      "UNRECOGNIZED"
    ]
  },
  {
    "syntax": "interface",
    "name": "GroupMember",
    "properties": [
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "userId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "role",
        "type": "GroupMemberRole | undefined",
        "isOptional": true
      },
      {
        "name": "joinDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "muteEndDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "userStatus",
        "type": "UserStatus | undefined",
        "isOptional": true
      },
      {
        "name": "usingDeviceTypes",
        "type": "DeviceType[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupMember",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupMember"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupMember",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupMembersWithVersion",
    "properties": [
      {
        "name": "groupMembers",
        "type": "GroupMember[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupMembersWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupMembersWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupMembersWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "Group",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "typeId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creatorId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "ownerId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "announcement",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "muteEndDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "active",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "userDefinedAttributes",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "Group",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "Group"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "Group",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "GroupsWithVersion",
    "properties": [
      {
        "name": "groups",
        "type": "Group[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "GroupsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "GroupsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "GroupsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "enum",
    "name": "ProfileAccessStrategy",
    "members": [
      "ALL",
      "ALL_EXCEPT_BLOCKED_USERS",
      "FRIENDS",
      "UNRECOGNIZED"
    ]
  },
  {
    "syntax": "interface",
    "name": "UserInfo$1",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "profilePicture",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "profileAccessStrategy",
        "type": "ProfileAccessStrategy | undefined",
        "isOptional": true
      },
      {
        "name": "registrationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "active",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "userDefinedAttributes",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserInfo$1",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserInfo$1"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserInfo$1",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "MessageReactionGroup",
    "properties": [
      {
        "name": "reactionType",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "reactionCount",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "userInfos",
        "type": "UserInfo$1[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "MessageReactionGroup",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "MessageReactionGroup"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "MessageReactionGroup",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "Message",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "deliveryDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "modificationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "text",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "senderId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "isSystemMessage",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "recipientId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "records",
        "type": "Uint8Array[]",
        "isOptional": false
      },
      {
        "name": "sequenceId",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "preMessageId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "reactionGroups",
        "type": "MessageReactionGroup[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "Message",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "Message"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "Message",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "Messages",
    "properties": [
      {
        "name": "messages",
        "type": "Message[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "Messages",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "Messages"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "Messages",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "MessagesWithTotal",
    "properties": [
      {
        "name": "total",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "isGroupMessage",
        "type": "boolean",
        "isOptional": false
      },
      {
        "name": "fromId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "messages",
        "type": "Message[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "MessagesWithTotal",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "MessagesWithTotal"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "MessagesWithTotal",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "MessagesWithTotalList",
    "properties": [
      {
        "name": "messagesWithTotalList",
        "type": "MessagesWithTotal[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "MessagesWithTotalList",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "MessagesWithTotalList"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "MessagesWithTotalList",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "StorageResourceInfo",
    "properties": [
      {
        "name": "idNum",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "idStr",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "mediaType",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "uploaderId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "creationDate",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "StorageResourceInfo",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "StorageResourceInfo"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "StorageResourceInfo",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "StorageResourceInfos",
    "properties": [
      {
        "name": "infos",
        "type": "StorageResourceInfo[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "StorageResourceInfos",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "StorageResourceInfos"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "StorageResourceInfos",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserLocation$1",
    "properties": [
      {
        "name": "latitude",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "longitude",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "timestamp",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "details",
        "type": "{\n        [key: string]: string;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserLocation$1",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserLocation$1"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserLocation$1",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "NearbyUser",
    "properties": [
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "deviceType",
        "type": "DeviceType | undefined",
        "isOptional": true
      },
      {
        "name": "info",
        "type": "UserInfo$1 | undefined",
        "isOptional": true
      },
      {
        "name": "distance",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "location",
        "type": "UserLocation$1 | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "NearbyUser",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "NearbyUser"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "NearbyUser",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "NearbyUsers",
    "properties": [
      {
        "name": "nearbyUsers",
        "type": "NearbyUser[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "NearbyUsers",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "NearbyUsers"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "NearbyUsers",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserFriendRequest",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "content",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "requestStatus",
        "type": "RequestStatus | undefined",
        "isOptional": true
      },
      {
        "name": "reason",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "expirationDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "requesterId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "recipientId",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserFriendRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserFriendRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserFriendRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserFriendRequestsWithVersion",
    "properties": [
      {
        "name": "userFriendRequests",
        "type": "UserFriendRequest[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserFriendRequestsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserFriendRequestsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserFriendRequestsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserInfosWithVersion",
    "properties": [
      {
        "name": "userInfos",
        "type": "UserInfo$1[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserInfosWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserInfosWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserInfosWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserOnlineStatus",
    "properties": [
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "userStatus",
        "type": "UserStatus",
        "isOptional": false
      },
      {
        "name": "deviceTypes",
        "type": "DeviceType[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserOnlineStatus",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserOnlineStatus"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserOnlineStatus",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserOnlineStatuses",
    "properties": [
      {
        "name": "statuses",
        "type": "UserOnlineStatus[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserOnlineStatuses",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserOnlineStatuses"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserOnlineStatuses",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserRelationshipGroup",
    "properties": [
      {
        "name": "index",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "name",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserRelationshipGroup",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserRelationshipGroup"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserRelationshipGroup",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserRelationshipGroupsWithVersion",
    "properties": [
      {
        "name": "userRelationshipGroups",
        "type": "UserRelationshipGroup[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserRelationshipGroupsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserRelationshipGroupsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserRelationshipGroupsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserRelationship",
    "properties": [
      {
        "name": "ownerId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "relatedUserId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "blockDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupIndex",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "establishmentDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserRelationship",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserRelationship"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserRelationship",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserRelationshipsWithVersion",
    "properties": [
      {
        "name": "userRelationships",
        "type": "UserRelationship[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserRelationshipsWithVersion",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserRelationshipsWithVersion"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserRelationshipsWithVersion",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserSession",
    "properties": [
      {
        "name": "sessionId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "serverId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserSession",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserSession"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserSession",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserSettings",
    "properties": [
      {
        "name": "settings",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UserSettings",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UserSettings"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UserSettings",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateMeetingRequest",
    "properties": [
      {
        "name": "userId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "password",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "startDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateMeetingRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateMeetingRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateMeetingRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteMeetingRequest",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteMeetingRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteMeetingRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteMeetingRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryMeetingsRequest",
    "properties": [
      {
        "name": "ids",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "creatorIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "groupIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "creationDateStart",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creationDateEnd",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "skip",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "limit",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryMeetingsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryMeetingsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryMeetingsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "enum",
    "name": "ResponseAction",
    "members": [
      "ACCEPT",
      "DECLINE",
      "IGNORE",
      "UNRECOGNIZED"
    ]
  },
  {
    "syntax": "interface",
    "name": "UpdateMeetingInvitationRequest",
    "properties": [
      {
        "name": "meetingId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "password",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "responseAction",
        "type": "ResponseAction",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateMeetingInvitationRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateMeetingInvitationRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateMeetingInvitationRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateMeetingRequest",
    "properties": [
      {
        "name": "id",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "password",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateMeetingRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateMeetingRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateMeetingRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteConversationSettingsRequest",
    "properties": [
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "groupIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "names",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteConversationSettingsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteConversationSettingsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteConversationSettingsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryConversationSettingsRequest",
    "properties": [
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "groupIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "names",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDateStart",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryConversationSettingsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryConversationSettingsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryConversationSettingsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryConversationsRequest",
    "properties": [
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "groupIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryConversationsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryConversationsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryConversationsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateConversationRequest",
    "properties": [
      {
        "name": "userId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "readDate",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateConversationRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateConversationRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateConversationRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateConversationSettingsRequest",
    "properties": [
      {
        "name": "userId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "settings",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateConversationSettingsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateConversationSettingsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateConversationSettingsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateTypingStatusRequest",
    "properties": [
      {
        "name": "isGroupMessage",
        "type": "boolean",
        "isOptional": false
      },
      {
        "name": "toId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateTypingStatusRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateTypingStatusRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateTypingStatusRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateGroupBlockedUserRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateGroupBlockedUserRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateGroupBlockedUserRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateGroupBlockedUserRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteGroupBlockedUserRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteGroupBlockedUserRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteGroupBlockedUserRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteGroupBlockedUserRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryGroupBlockedUserIdsRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryGroupBlockedUserIdsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryGroupBlockedUserIdsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryGroupBlockedUserIdsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryGroupBlockedUserInfosRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryGroupBlockedUserInfosRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryGroupBlockedUserInfosRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryGroupBlockedUserInfosRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateGroupRequest",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "announcement",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "minScore",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "typeId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "muteEndDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "userDefinedAttributes",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateGroupRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateGroupRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateGroupRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteGroupRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteGroupRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteGroupRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteGroupRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CheckGroupJoinQuestionsAnswersRequest",
    "properties": [
      {
        "name": "questionIdToAnswer",
        "type": "{\n        [key: string]: string;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CheckGroupJoinQuestionsAnswersRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CheckGroupJoinQuestionsAnswersRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CheckGroupJoinQuestionsAnswersRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateGroupInvitationRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "inviteeId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "content",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateGroupInvitationRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateGroupInvitationRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateGroupInvitationRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateGroupJoinQuestionsRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "questions",
        "type": "GroupJoinQuestion[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateGroupJoinQuestionsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateGroupJoinQuestionsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateGroupJoinQuestionsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateGroupJoinRequestRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "content",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateGroupJoinRequestRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateGroupJoinRequestRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateGroupJoinRequestRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteGroupInvitationRequest",
    "properties": [
      {
        "name": "invitationId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteGroupInvitationRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteGroupInvitationRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteGroupInvitationRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteGroupJoinQuestionsRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "questionIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteGroupJoinQuestionsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteGroupJoinQuestionsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteGroupJoinQuestionsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteGroupJoinRequestRequest",
    "properties": [
      {
        "name": "requestId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteGroupJoinRequestRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteGroupJoinRequestRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteGroupJoinRequestRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryGroupInvitationsRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "areSentByMe",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryGroupInvitationsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryGroupInvitationsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryGroupInvitationsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryGroupJoinQuestionsRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "withAnswers",
        "type": "boolean",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryGroupJoinQuestionsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryGroupJoinQuestionsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryGroupJoinQuestionsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryGroupJoinRequestsRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryGroupJoinRequestsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryGroupJoinRequestsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryGroupJoinRequestsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateGroupInvitationRequest",
    "properties": [
      {
        "name": "invitationId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "responseAction",
        "type": "ResponseAction",
        "isOptional": false
      },
      {
        "name": "reason",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateGroupInvitationRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateGroupInvitationRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateGroupInvitationRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateGroupJoinQuestionRequest",
    "properties": [
      {
        "name": "questionId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "question",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "answers",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "score",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateGroupJoinQuestionRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateGroupJoinQuestionRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateGroupJoinQuestionRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateGroupJoinRequestRequest",
    "properties": [
      {
        "name": "requestId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "responseAction",
        "type": "ResponseAction",
        "isOptional": false
      },
      {
        "name": "reason",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateGroupJoinRequestRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateGroupJoinRequestRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateGroupJoinRequestRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateGroupMembersRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "role",
        "type": "GroupMemberRole | undefined",
        "isOptional": true
      },
      {
        "name": "muteEndDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateGroupMembersRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateGroupMembersRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateGroupMembersRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteGroupMembersRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "memberIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "successorId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "quitAfterTransfer",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteGroupMembersRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteGroupMembersRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteGroupMembersRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryGroupMembersRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "memberIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "withStatus",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryGroupMembersRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryGroupMembersRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryGroupMembersRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateGroupMemberRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "memberId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "role",
        "type": "GroupMemberRole | undefined",
        "isOptional": true
      },
      {
        "name": "muteEndDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateGroupMemberRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateGroupMemberRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateGroupMemberRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryGroupsRequest",
    "properties": [
      {
        "name": "groupIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "skip",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "limit",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "fieldsToHighlight",
        "type": "number[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryGroupsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryGroupsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryGroupsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryJoinedGroupIdsRequest",
    "properties": [
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryJoinedGroupIdsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryJoinedGroupIdsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryJoinedGroupIdsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryJoinedGroupInfosRequest",
    "properties": [
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryJoinedGroupInfosRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryJoinedGroupInfosRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryJoinedGroupInfosRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateGroupRequest",
    "properties": [
      {
        "name": "groupId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "quitAfterTransfer",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "announcement",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "minScore",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "typeId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "muteEndDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "successorId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "userDefinedAttributes",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateGroupRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateGroupRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateGroupRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateMessageReactionsRequest",
    "properties": [
      {
        "name": "messageId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "reactionTypes",
        "type": "number[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateMessageReactionsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateMessageReactionsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateMessageReactionsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateMessageRequest",
    "properties": [
      {
        "name": "messageId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "isSystemMessage",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "groupId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "recipientId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "deliveryDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "text",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "records",
        "type": "Uint8Array[]",
        "isOptional": false
      },
      {
        "name": "burnAfter",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "preMessageId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateMessageRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateMessageRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateMessageRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteMessageReactionsRequest",
    "properties": [
      {
        "name": "messageId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "reactionTypes",
        "type": "number[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteMessageReactionsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteMessageReactionsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteMessageReactionsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryMessagesRequest",
    "properties": [
      {
        "name": "ids",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "areGroupMessages",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "areSystemMessages",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "fromIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "deliveryDateStart",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "deliveryDateEnd",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "maxCount",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "withTotal",
        "type": "boolean",
        "isOptional": false
      },
      {
        "name": "descending",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryMessagesRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryMessagesRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryMessagesRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateMessageRequest",
    "properties": [
      {
        "name": "messageId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "text",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "records",
        "type": "Uint8Array[]",
        "isOptional": false
      },
      {
        "name": "recallDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateMessageRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateMessageRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateMessageRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "enum",
    "name": "StorageResourceType",
    "members": [
      "USER_PROFILE_PICTURE",
      "GROUP_PROFILE_PICTURE",
      "MESSAGE_ATTACHMENT",
      "UNRECOGNIZED"
    ]
  },
  {
    "syntax": "interface",
    "name": "DeleteResourceRequest",
    "properties": [
      {
        "name": "type",
        "type": "StorageResourceType",
        "isOptional": false
      },
      {
        "name": "idNum",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "idStr",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteResourceRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteResourceRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteResourceRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryMessageAttachmentInfosRequest",
    "properties": [
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "groupIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "creationDateStart",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "creationDateEnd",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "inPrivateConversation",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "areSharedByMe",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryMessageAttachmentInfosRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryMessageAttachmentInfosRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryMessageAttachmentInfosRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryResourceDownloadInfoRequest",
    "properties": [
      {
        "name": "type",
        "type": "StorageResourceType",
        "isOptional": false
      },
      {
        "name": "idNum",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "idStr",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryResourceDownloadInfoRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryResourceDownloadInfoRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryResourceDownloadInfoRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryResourceUploadInfoRequest",
    "properties": [
      {
        "name": "type",
        "type": "StorageResourceType",
        "isOptional": false
      },
      {
        "name": "idNum",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "idStr",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "mediaType",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryResourceUploadInfoRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryResourceUploadInfoRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryResourceUploadInfoRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateMessageAttachmentInfoRequest",
    "properties": [
      {
        "name": "attachmentIdNum",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "attachmentIdStr",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "userIdToShareWith",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "userIdToUnshareWith",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupIdToShareWith",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "groupIdToUnshareWith",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateMessageAttachmentInfoRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateMessageAttachmentInfoRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateMessageAttachmentInfoRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateSessionRequest",
    "properties": [
      {
        "name": "version",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "password",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "userStatus",
        "type": "UserStatus | undefined",
        "isOptional": true
      },
      {
        "name": "deviceType",
        "type": "DeviceType",
        "isOptional": false
      },
      {
        "name": "deviceDetails",
        "type": "{\n        [key: string]: string;\n    }",
        "isOptional": false
      },
      {
        "name": "location",
        "type": "UserLocation$1 | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateSessionRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateSessionRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateSessionRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteSessionRequest",
    "properties": [
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteSessionRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteSessionRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteSessionRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteUserSettingsRequest",
    "properties": [
      {
        "name": "names",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteUserSettingsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteUserSettingsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteUserSettingsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryNearbyUsersRequest",
    "properties": [
      {
        "name": "latitude",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "longitude",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "maxCount",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "maxDistance",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "withCoordinates",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "withDistance",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "withUserInfo",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryNearbyUsersRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryNearbyUsersRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryNearbyUsersRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryUserOnlineStatusesRequest",
    "properties": [
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryUserOnlineStatusesRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryUserOnlineStatusesRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryUserOnlineStatusesRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryUserProfilesRequest",
    "properties": [
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "skip",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "limit",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "fieldsToHighlight",
        "type": "number[]",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryUserProfilesRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryUserProfilesRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryUserProfilesRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryUserSettingsRequest",
    "properties": [
      {
        "name": "names",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDateStart",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryUserSettingsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryUserSettingsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryUserSettingsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateFriendRequestRequest",
    "properties": [
      {
        "name": "recipientId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "content",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateFriendRequestRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateFriendRequestRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateFriendRequestRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateRelationshipGroupRequest",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateRelationshipGroupRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateRelationshipGroupRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateRelationshipGroupRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "CreateRelationshipRequest",
    "properties": [
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "blocked",
        "type": "boolean",
        "isOptional": false
      },
      {
        "name": "groupIndex",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "CreateRelationshipRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "CreateRelationshipRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "CreateRelationshipRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteFriendRequestRequest",
    "properties": [
      {
        "name": "requestId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteFriendRequestRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteFriendRequestRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteFriendRequestRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteRelationshipGroupRequest",
    "properties": [
      {
        "name": "groupIndex",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "targetGroupIndex",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteRelationshipGroupRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteRelationshipGroupRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteRelationshipGroupRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "DeleteRelationshipRequest",
    "properties": [
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "groupIndex",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "targetGroupIndex",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "DeleteRelationshipRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "DeleteRelationshipRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "DeleteRelationshipRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryFriendRequestsRequest",
    "properties": [
      {
        "name": "areSentByMe",
        "type": "boolean",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryFriendRequestsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryFriendRequestsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryFriendRequestsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryRelatedUserIdsRequest",
    "properties": [
      {
        "name": "blocked",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "groupIndexes",
        "type": "number[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryRelatedUserIdsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryRelatedUserIdsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryRelatedUserIdsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryRelationshipGroupsRequest",
    "properties": [
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryRelationshipGroupsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryRelationshipGroupsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryRelationshipGroupsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "QueryRelationshipsRequest",
    "properties": [
      {
        "name": "userIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "name": "blocked",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "groupIndexes",
        "type": "number[]",
        "isOptional": false
      },
      {
        "name": "lastUpdatedDate",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "QueryRelationshipsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "QueryRelationshipsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "QueryRelationshipsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateFriendRequestRequest",
    "properties": [
      {
        "name": "requestId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "responseAction",
        "type": "ResponseAction",
        "isOptional": false
      },
      {
        "name": "reason",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateFriendRequestRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateFriendRequestRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateFriendRequestRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateRelationshipGroupRequest",
    "properties": [
      {
        "name": "groupIndex",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "newName",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateRelationshipGroupRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateRelationshipGroupRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateRelationshipGroupRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateRelationshipRequest",
    "properties": [
      {
        "name": "userId",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "blocked",
        "type": "boolean | undefined",
        "isOptional": true
      },
      {
        "name": "newGroupIndex",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "deleteGroupIndex",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateRelationshipRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateRelationshipRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateRelationshipRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateUserLocationRequest",
    "properties": [
      {
        "name": "latitude",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "longitude",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "details",
        "type": "{\n        [key: string]: string;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateUserLocationRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateUserLocationRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateUserLocationRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateUserOnlineStatusRequest",
    "properties": [
      {
        "name": "deviceTypes",
        "type": "DeviceType[]",
        "isOptional": false
      },
      {
        "name": "userStatus",
        "type": "UserStatus",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateUserOnlineStatusRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateUserOnlineStatusRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateUserOnlineStatusRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateUserRequest",
    "properties": [
      {
        "name": "password",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "name",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "intro",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "profilePicture",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "profileAccessStrategy",
        "type": "ProfileAccessStrategy | undefined",
        "isOptional": true
      },
      {
        "name": "userDefinedAttributes",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateUserRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateUserRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateUserRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UpdateUserSettingsRequest",
    "properties": [
      {
        "name": "settings",
        "type": "{\n        [key: string]: Value;\n    }",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "UpdateUserSettingsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "UpdateUserSettingsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "UpdateUserSettingsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "TurmsRequest",
    "properties": [
      {
        "name": "requestId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      },
      {
        "name": "createSessionRequest",
        "type": "CreateSessionRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteSessionRequest",
        "type": "DeleteSessionRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryConversationsRequest",
        "type": "QueryConversationsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateConversationRequest",
        "type": "UpdateConversationRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateTypingStatusRequest",
        "type": "UpdateTypingStatusRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createMessageRequest",
        "type": "CreateMessageRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryMessagesRequest",
        "type": "QueryMessagesRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateMessageRequest",
        "type": "UpdateMessageRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createGroupMembersRequest",
        "type": "CreateGroupMembersRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteGroupMembersRequest",
        "type": "DeleteGroupMembersRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryGroupMembersRequest",
        "type": "QueryGroupMembersRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateGroupMemberRequest",
        "type": "UpdateGroupMemberRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryUserProfilesRequest",
        "type": "QueryUserProfilesRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryNearbyUsersRequest",
        "type": "QueryNearbyUsersRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryUserOnlineStatusesRequest",
        "type": "QueryUserOnlineStatusesRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateUserLocationRequest",
        "type": "UpdateUserLocationRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateUserOnlineStatusRequest",
        "type": "UpdateUserOnlineStatusRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateUserRequest",
        "type": "UpdateUserRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateUserSettingsRequest",
        "type": "UpdateUserSettingsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteUserSettingsRequest",
        "type": "DeleteUserSettingsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryUserSettingsRequest",
        "type": "QueryUserSettingsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createFriendRequestRequest",
        "type": "CreateFriendRequestRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createRelationshipGroupRequest",
        "type": "CreateRelationshipGroupRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createRelationshipRequest",
        "type": "CreateRelationshipRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteFriendRequestRequest",
        "type": "DeleteFriendRequestRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteRelationshipGroupRequest",
        "type": "DeleteRelationshipGroupRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteRelationshipRequest",
        "type": "DeleteRelationshipRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryFriendRequestsRequest",
        "type": "QueryFriendRequestsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryRelatedUserIdsRequest",
        "type": "QueryRelatedUserIdsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryRelationshipGroupsRequest",
        "type": "QueryRelationshipGroupsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryRelationshipsRequest",
        "type": "QueryRelationshipsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateFriendRequestRequest",
        "type": "UpdateFriendRequestRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateRelationshipGroupRequest",
        "type": "UpdateRelationshipGroupRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateRelationshipRequest",
        "type": "UpdateRelationshipRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createGroupRequest",
        "type": "CreateGroupRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteGroupRequest",
        "type": "DeleteGroupRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryGroupsRequest",
        "type": "QueryGroupsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryJoinedGroupIdsRequest",
        "type": "QueryJoinedGroupIdsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryJoinedGroupInfosRequest",
        "type": "QueryJoinedGroupInfosRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateGroupRequest",
        "type": "UpdateGroupRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createGroupBlockedUserRequest",
        "type": "CreateGroupBlockedUserRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteGroupBlockedUserRequest",
        "type": "DeleteGroupBlockedUserRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryGroupBlockedUserIdsRequest",
        "type": "QueryGroupBlockedUserIdsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryGroupBlockedUserInfosRequest",
        "type": "QueryGroupBlockedUserInfosRequest | undefined",
        "isOptional": true
      },
      {
        "name": "checkGroupJoinQuestionsAnswersRequest",
        "type": "CheckGroupJoinQuestionsAnswersRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createGroupInvitationRequest",
        "type": "CreateGroupInvitationRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createGroupJoinRequestRequest",
        "type": "CreateGroupJoinRequestRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createGroupJoinQuestionsRequest",
        "type": "CreateGroupJoinQuestionsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteGroupInvitationRequest",
        "type": "DeleteGroupInvitationRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteGroupJoinRequestRequest",
        "type": "DeleteGroupJoinRequestRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteGroupJoinQuestionsRequest",
        "type": "DeleteGroupJoinQuestionsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryGroupInvitationsRequest",
        "type": "QueryGroupInvitationsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryGroupJoinRequestsRequest",
        "type": "QueryGroupJoinRequestsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryGroupJoinQuestionsRequest",
        "type": "QueryGroupJoinQuestionsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateGroupInvitationRequest",
        "type": "UpdateGroupInvitationRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateGroupJoinQuestionRequest",
        "type": "UpdateGroupJoinQuestionRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateGroupJoinRequestRequest",
        "type": "UpdateGroupJoinRequestRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createMeetingRequest",
        "type": "CreateMeetingRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteMeetingRequest",
        "type": "DeleteMeetingRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryMeetingsRequest",
        "type": "QueryMeetingsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateMeetingRequest",
        "type": "UpdateMeetingRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateMeetingInvitationRequest",
        "type": "UpdateMeetingInvitationRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteResourceRequest",
        "type": "DeleteResourceRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryResourceDownloadInfoRequest",
        "type": "QueryResourceDownloadInfoRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryResourceUploadInfoRequest",
        "type": "QueryResourceUploadInfoRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryMessageAttachmentInfosRequest",
        "type": "QueryMessageAttachmentInfosRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateMessageAttachmentInfoRequest",
        "type": "UpdateMessageAttachmentInfoRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteConversationSettingsRequest",
        "type": "DeleteConversationSettingsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "queryConversationSettingsRequest",
        "type": "QueryConversationSettingsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "updateConversationSettingsRequest",
        "type": "UpdateConversationSettingsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "createMessageReactionsRequest",
        "type": "CreateMessageReactionsRequest | undefined",
        "isOptional": true
      },
      {
        "name": "deleteMessageReactionsRequest",
        "type": "DeleteMessageReactionsRequest | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "TurmsRequest",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "TurmsRequest"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "TurmsRequest",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "TurmsNotification",
    "properties": [
      {
        "name": "timestamp",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      },
      {
        "name": "requestId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "code",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "reason",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "data",
        "type": "TurmsNotification_Data | undefined",
        "isOptional": true
      },
      {
        "name": "requesterId",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "closeStatus",
        "type": "number | undefined",
        "isOptional": true
      },
      {
        "name": "relayedRequest",
        "type": "TurmsRequest | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "TurmsNotification",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "TurmsNotification"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "TurmsNotification",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "TurmsNotification_Data",
    "properties": [
      {
        "name": "long",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "string",
        "type": "string | undefined",
        "isOptional": true
      },
      {
        "name": "longsWithVersion",
        "type": "LongsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "stringsWithVersion",
        "type": "StringsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "conversations",
        "type": "Conversations | undefined",
        "isOptional": true
      },
      {
        "name": "messages",
        "type": "Messages | undefined",
        "isOptional": true
      },
      {
        "name": "messagesWithTotalList",
        "type": "MessagesWithTotalList | undefined",
        "isOptional": true
      },
      {
        "name": "userSession",
        "type": "UserSession | undefined",
        "isOptional": true
      },
      {
        "name": "userInfosWithVersion",
        "type": "UserInfosWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "userOnlineStatuses",
        "type": "UserOnlineStatuses | undefined",
        "isOptional": true
      },
      {
        "name": "userFriendRequestsWithVersion",
        "type": "UserFriendRequestsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "userRelationshipGroupsWithVersion",
        "type": "UserRelationshipGroupsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "userRelationshipsWithVersion",
        "type": "UserRelationshipsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "nearbyUsers",
        "type": "NearbyUsers | undefined",
        "isOptional": true
      },
      {
        "name": "groupInvitationsWithVersion",
        "type": "GroupInvitationsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "groupJoinQuestionAnswerResult",
        "type": "GroupJoinQuestionsAnswerResult | undefined",
        "isOptional": true
      },
      {
        "name": "groupJoinRequestsWithVersion",
        "type": "GroupJoinRequestsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "groupJoinQuestionsWithVersion",
        "type": "GroupJoinQuestionsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "groupMembersWithVersion",
        "type": "GroupMembersWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "groupsWithVersion",
        "type": "GroupsWithVersion | undefined",
        "isOptional": true
      },
      {
        "name": "meetings",
        "type": "Meetings | undefined",
        "isOptional": true
      },
      {
        "name": "storageResourceInfos",
        "type": "StorageResourceInfos | undefined",
        "isOptional": true
      },
      {
        "name": "conversationSettingsList",
        "type": "ConversationSettingsList | undefined",
        "isOptional": true
      },
      {
        "name": "userSettings",
        "type": "UserSettings | undefined",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "variable",
    "name": "TurmsNotification_Data",
    "isConst": true,
    "type": {
      "syntax": "interface",
      "properties": [],
      "methods": [
        {
          "name": "encode",
          "isAbstract": true,
          "type": "_m0.Writer",
          "isOptional": false,
          "parameters": [
            {
              "name": "message",
              "type": "TurmsNotification_Data"
            },
            {
              "name": "writer",
              "type": "_m0.Writer"
            }
          ]
        },
        {
          "name": "decode",
          "isAbstract": true,
          "type": "TurmsNotification_Data",
          "isOptional": false,
          "parameters": [
            {
              "name": "input",
              "type": "_m0.Reader | Uint8Array"
            },
            {
              "name": "length",
              "type": "number"
            }
          ]
        }
      ]
    }
  },
  {
    "syntax": "type_alias",
    "name": "ParsedNotification",
    "members": []
  },
  {
    "syntax": "class",
    "name": "WebSocketMetrics",
    "properties": [
      {
        "syntax": "property",
        "name": "connectTime",
        "type": "number",
        "isOptional": true
      },
      {
        "syntax": "property",
        "name": "dataReceived",
        "type": "number",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "dataSent",
        "type": "number",
        "isOptional": false
      }
    ],
    "accessors": [],
    "methods": []
  },
  {
    "syntax": "type_alias",
    "name": "OnClosedParams",
    "members": [
      {
        "name": "code",
        "type": "number"
      },
      {
        "name": "reason",
        "type": "string"
      }
    ]
  },
  {
    "syntax": "interface",
    "name": "EventListener",
    "properties": [
      {
        "name": "onOpened",
        "type": "(() => any)",
        "isOptional": false
      },
      {
        "name": "onClosed",
        "type": "((event: OnClosedParams) => any)",
        "isOptional": false
      },
      {
        "name": "onMessage",
        "type": "((data: ArrayBuffer) => any)",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "class",
    "name": "WebSocketClient",
    "properties": [],
    "accessors": [
      {
        "syntax": "get_accessor",
        "name": "url",
        "type": "string"
      },
      {
        "syntax": "get_accessor",
        "name": "isConnecting",
        "type": "boolean"
      },
      {
        "syntax": "get_accessor",
        "name": "isConnected",
        "type": "boolean"
      },
      {
        "syntax": "get_accessor",
        "name": "metrics",
        "type": "WebSocketMetrics"
      }
    ],
    "methods": [
      {
        "name": "close",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "send",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": [
          {
            "name": "data",
            "type": "ArrayBufferLike | Blob | ArrayBufferView"
          }
        ]
      }
    ],
    "constructor": {
      "name": "WebSocketClient",
      "parameters": [
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "listener",
          "type": "EventListener"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "BaseService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "close",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "onDisconnected",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "error",
            "type": "Error"
          }
        ]
      }
    ],
    "constructor": {
      "name": "BaseService",
      "parameters": [
        {
          "name": "stateStore",
          "type": "StateStore"
        }
      ]
    }
  },
  {
    "syntax": "enum",
    "name": "RequestType",
    "members": [
      "REGISTER",
      "UNREGISTER",
      "REBIND_CONTEXT_ID",
      "REQUEST_LOGIN",
      "FINISH_LOGIN_REQUEST",
      "UPDATE_LOGGED_IN_USER_INFO",
      "UPDATE_IS_SESSION_OPEN",
      "UPDATE_SESSION_ID",
      "UPDATE_SERVER_ID",
      "UPDATE_LAST_REQUEST_DATE",
      "CONNECT",
      "SEND_DATA"
    ]
  },
  {
    "syntax": "enum",
    "name": "NotificationType",
    "members": [
      "UPDATE_LOGGED_IN_USER_INFO",
      "UPDATE_IS_SESSION_OPEN",
      "UPDATE_SESSION_ID",
      "UPDATE_SERVER_ID",
      "UPDATE_LAST_REQUEST_DATE",
      "WEBSOCKET_CONNECTING",
      "WEBSOCKET_CONNECTED",
      "WEBSOCKET_CLOSED",
      "WEBSOCKET_MESSAGE_RECEIVED"
    ]
  },
  {
    "syntax": "type_alias",
    "name": "Request",
    "members": [
      {
        "name": "id",
        "type": "number"
      },
      {
        "name": "type",
        "type": "RequestType"
      },
      {
        "name": "data",
        "type": "any"
      }
    ]
  },
  {
    "syntax": "type_alias",
    "name": "Notification$1",
    "members": [
      {
        "name": "type",
        "type": "NotificationType"
      },
      {
        "name": "data",
        "type": "any"
      }
    ]
  },
  {
    "syntax": "class",
    "name": "SharedContextService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "addNotificationListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "type",
            "type": "NotificationType"
          },
          {
            "name": "listener",
            "type": "(notification: Notification$1) => void"
          }
        ]
      },
      {
        "name": "request",
        "syntax": "method",
        "type": "Promise<any>",
        "isOptional": false,
        "parameters": [
          {
            "name": "request",
            "type": "Request"
          }
        ]
      },
      {
        "name": "close",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "onDisconnected",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "error",
            "type": "Error"
          }
        ]
      }
    ],
    "constructor": {
      "name": "SharedContextService",
      "parameters": [
        {
          "name": "stateStore",
          "type": "StateStore"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "StateStore",
    "properties": [],
    "accessors": [
      {
        "syntax": "get_accessor",
        "name": "sharedContextService",
        "type": "SharedContextService | undefined"
      },
      {
        "syntax": "get_accessor",
        "name": "useSharedContext",
        "type": "boolean"
      },
      {
        "syntax": "get_accessor",
        "name": "websocket",
        "type": "WebSocketClient | undefined"
      },
      {
        "syntax": "set_accessor",
        "name": "websocket"
      },
      {
        "syntax": "get_accessor",
        "name": "isConnected",
        "type": "boolean"
      },
      {
        "syntax": "get_accessor",
        "name": "isSessionOpen",
        "type": "boolean"
      },
      {
        "syntax": "set_accessor",
        "name": "isSessionOpen"
      },
      {
        "syntax": "get_accessor",
        "name": "sessionId",
        "type": "string"
      },
      {
        "syntax": "set_accessor",
        "name": "sessionId"
      },
      {
        "syntax": "get_accessor",
        "name": "serverId",
        "type": "string"
      },
      {
        "syntax": "set_accessor",
        "name": "serverId"
      },
      {
        "syntax": "get_accessor",
        "name": "lastRequestDate",
        "type": "number"
      },
      {
        "syntax": "set_accessor",
        "name": "lastRequestDate"
      }
    ],
    "methods": [
      {
        "name": "reset",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": []
      }
    ],
    "constructor": {
      "name": "StateStore",
      "parameters": [
        {
          "name": "sharedContextService",
          "type": "SharedContextService"
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "ConnectOptions",
    "properties": [
      {
        "name": "wsUrl",
        "type": "string",
        "isOptional": true
      },
      {
        "name": "connectTimeout",
        "type": "number",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "interface",
    "name": "ConnectionDisconnectInfo",
    "properties": [
      {
        "name": "wasConnected",
        "type": "boolean",
        "isOptional": false
      },
      {
        "name": "wsUrl",
        "type": "string",
        "isOptional": false
      },
      {
        "name": "code",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "reason",
        "type": "string",
        "isOptional": false
      }
    ],
    "methods": []
  },
  {
    "syntax": "class",
    "name": "ConnectionService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "addOnConnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "() => void"
          }
        ]
      },
      {
        "name": "addOnDisconnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(info: ConnectionDisconnectInfo) => void"
          }
        ]
      },
      {
        "name": "addMessageListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(message: ArrayBuffer) => void"
          }
        ]
      },
      {
        "name": "removeOnConnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "() => void"
          }
        ]
      },
      {
        "name": "removeOnDisconnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(info: ConnectionDisconnectInfo) => void"
          }
        ]
      },
      {
        "name": "removeMessageListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(message: ArrayBuffer) => void"
          }
        ]
      },
      {
        "name": "connect",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": [
          {
            "typeReference": "ConnectOptions",
            "parameters": [
              {
                "name": "wsUrl"
              },
              {
                "name": "connectTimeout"
              }
            ]
          }
        ]
      },
      {
        "name": "disconnect",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "close",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "onDisconnected",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "error",
            "type": "Error"
          }
        ]
      }
    ],
    "constructor": {
      "name": "ConnectionService",
      "parameters": [
        {
          "name": "stateStore",
          "type": "StateStore"
        },
        {
          "name": "wsUrl",
          "type": "string"
        },
        {
          "name": "connectTimeout",
          "type": "number"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "TurmsDriver",
    "properties": [],
    "accessors": [
      {
        "syntax": "get_accessor",
        "name": "isHeartbeatRunning",
        "type": "boolean"
      },
      {
        "syntax": "get_accessor",
        "name": "isConnected",
        "type": "boolean"
      },
      {
        "syntax": "get_accessor",
        "name": "connectionMetrics",
        "type": "WebSocketMetrics | undefined"
      }
    ],
    "methods": [
      {
        "name": "stateStore",
        "syntax": "method",
        "type": "StateStore",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "initConnectionService",
        "syntax": "method",
        "type": "ConnectionService",
        "isOptional": false,
        "parameters": [
          {
            "name": "wsUrl",
            "type": "string"
          },
          {
            "name": "connectTimeout",
            "type": "number"
          }
        ]
      },
      {
        "name": "close",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "addSharedContextNotificationListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "type",
            "type": "NotificationType"
          },
          {
            "name": "listener",
            "type": "((notification: Notification$1) => void)"
          }
        ]
      },
      {
        "name": "requestSharedContext",
        "syntax": "method",
        "type": "Promise<any>",
        "isOptional": false,
        "parameters": [
          {
            "name": "request",
            "type": "Request"
          }
        ]
      },
      {
        "name": "startHeartbeat",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "stopHeartbeat",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "sendHeartbeat",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "connect",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": [
          {
            "name": "options",
            "type": "ConnectOptions"
          }
        ]
      },
      {
        "name": "disconnect",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "addOnConnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "() => void"
          }
        ]
      },
      {
        "name": "addOnDisconnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(disconnectInfo: ConnectionDisconnectInfo) => void"
          }
        ]
      },
      {
        "name": "removeOnConnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "() => void"
          }
        ]
      },
      {
        "name": "removeOnDisconnectedListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(disconnectInfo: ConnectionDisconnectInfo) => void"
          }
        ]
      },
      {
        "name": "send",
        "syntax": "method",
        "type": "Promise<TurmsNotification>",
        "isOptional": false,
        "parameters": [
          {
            "name": "message",
            "type": "TurmsRequest"
          }
        ]
      },
      {
        "name": "addNotificationListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "((notification: ParsedNotification) => void)"
          }
        ]
      },
      {
        "name": "removeNotificationListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "((notification: ParsedNotification) => void)"
          }
        ]
      }
    ],
    "constructor": {
      "name": "TurmsDriver",
      "parameters": [
        {
          "name": "wsUrl",
          "type": "string"
        },
        {
          "name": "connectTimeout",
          "type": "number"
        },
        {
          "name": "requestTimeout",
          "type": "number"
        },
        {
          "name": "minRequestInterval",
          "type": "number"
        },
        {
          "name": "heartbeatInterval",
          "type": "number"
        },
        {
          "name": "useSharedContext",
          "type": "boolean"
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "ClientOptions",
    "properties": [
      {
        "name": "wsUrl",
        "type": "string",
        "isOptional": true
      },
      {
        "name": "connectionTimeout",
        "type": "number",
        "isOptional": true
      },
      {
        "name": "requestTimeout",
        "type": "number",
        "isOptional": true
      },
      {
        "name": "minRequestInterval",
        "type": "number",
        "isOptional": true
      },
      {
        "name": "heartbeatInterval",
        "type": "number",
        "isOptional": true
      },
      {
        "name": "storageServerUrl",
        "type": "string",
        "isOptional": true
      },
      {
        "name": "useSharedContext",
        "type": "boolean",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "class",
    "name": "Response",
    "properties": [
      {
        "syntax": "property",
        "name": "timestamp",
        "type": "Date",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "requestId",
        "type": "string",
        "isOptional": true
      },
      {
        "syntax": "property",
        "name": "code",
        "type": "number",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "data",
        "type": "T",
        "isOptional": false
      }
    ],
    "accessors": [],
    "methods": [],
    "constructor": {
      "name": "Response",
      "parameters": [
        {
          "name": "timestamp",
          "type": "Date"
        },
        {
          "name": "requestId",
          "type": "string"
        },
        {
          "name": "code",
          "type": "number"
        },
        {
          "name": "data",
          "type": "any"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "ConversationService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "queryPrivateConversations",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.PrivateConversation[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userIds",
                "type": "string[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroupConversations",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupConversation[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupIds",
                "type": "string[]"
              }
            ]
          }
        ]
      },
      {
        "name": "updatePrivateConversationReadDate",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "readDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "updateGroupConversationReadDate",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "readDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "upsertPrivateConversationSettings",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "settings",
                "type": "Record<string, Value>"
              }
            ]
          }
        ]
      },
      {
        "name": "upsertGroupConversationSettings",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "settings",
                "type": "Record<string, Value>"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteConversationSettings",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userIds",
                "type": "string[]"
              },
              {
                "name": "groupIds",
                "type": "string[]"
              },
              {
                "name": "names",
                "type": "string[]"
              }
            ]
          }
        ]
      },
      {
        "name": "updatePrivateConversationTypingStatus",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryConversationSettings",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.ConversationSettings[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userIds",
                "type": "string[]"
              },
              {
                "name": "groupIds",
                "type": "string[]"
              },
              {
                "name": "names",
                "type": "string[]"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "updateGroupConversationTypingStatus",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              }
            ]
          }
        ]
      }
    ],
    "constructor": {
      "name": "ConversationService",
      "parameters": [
        {
          "name": "turmsClient",
          "type": "TurmsClient"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "NewGroupJoinQuestion",
    "properties": [
      {
        "syntax": "property",
        "name": "question",
        "type": "string",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "answers",
        "type": "string[]",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "score",
        "type": "number",
        "isOptional": false
      }
    ],
    "accessors": [],
    "methods": [],
    "constructor": {
      "name": "NewGroupJoinQuestion",
      "parameters": [
        {
          "name": "question",
          "type": "string"
        },
        {
          "name": "answers",
          "type": "string[]"
        },
        {
          "name": "score",
          "type": "number"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "GroupService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "createGroup",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "intro",
                "type": "string"
              },
              {
                "name": "announcement",
                "type": "string"
              },
              {
                "name": "minScore",
                "type": "number"
              },
              {
                "name": "muteEndDate",
                "type": "Date"
              },
              {
                "name": "typeId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "updateGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "intro",
                "type": "string"
              },
              {
                "name": "announcement",
                "type": "string"
              },
              {
                "name": "minScore",
                "type": "number"
              },
              {
                "name": "typeId",
                "type": "string"
              },
              {
                "name": "muteEndDate",
                "type": "Date"
              },
              {
                "name": "successorId",
                "type": "string"
              },
              {
                "name": "quitAfterTransfer",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "transferOwnership",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "successorId",
                "type": "string"
              },
              {
                "name": "quitAfterTransfer",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "muteGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "muteEndDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "unmuteGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroups",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.Group[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupIds",
                "type": "string[]"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "searchGroups",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.Group[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "highlight",
                "type": "boolean"
              },
              {
                "name": "skip",
                "type": "number"
              },
              {
                "name": "limit",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "queryJoinedGroupIds",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.LongsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryJoinedGroupInfos",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "addGroupJoinQuestions",
        "syntax": "method",
        "type": "Promise<Response<string[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "questions",
                "type": "NewGroupJoinQuestion[]"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteGroupJoinQuestions",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "questionIds",
                "type": "string[]"
              }
            ]
          }
        ]
      },
      {
        "name": "updateGroupJoinQuestion",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "questionId",
                "type": "string"
              },
              {
                "name": "question",
                "type": "string"
              },
              {
                "name": "answers",
                "type": "string[]"
              },
              {
                "name": "score",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "blockUser",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "userId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "unblockUser",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "userId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryBlockedUserIds",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.LongsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryBlockedUserInfos",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserInfosWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "createInvitation",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "inviteeId",
                "type": "string"
              },
              {
                "name": "content",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteInvitation",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "invitationId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "replyInvitation",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "invitationId",
                "type": "string"
              },
              {
                "name": "responseAction",
                "type": "ResponseAction"
              },
              {
                "name": "reason",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryInvitationsByGroupId",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupInvitationsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryInvitations",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupInvitationsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "areSentByMe",
                "type": "boolean"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "createJoinRequest",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "content",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteJoinRequest",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "requestId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "replyJoinRequest",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "requestId",
                "type": "string"
              },
              {
                "name": "responseAction",
                "type": "ResponseAction"
              },
              {
                "name": "reason",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryJoinRequests",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupJoinRequestsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "querySentJoinRequests",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupJoinRequestsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroupJoinQuestions",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupJoinQuestionsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "withAnswers",
                "type": "boolean"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "answerGroupQuestions",
        "syntax": "method",
        "type": "Promise<Response<GroupJoinQuestionsAnswerResult | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "questionIdToAnswer",
                "type": "Record<string, string>"
              }
            ]
          }
        ]
      },
      {
        "name": "addGroupMembers",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "userIds",
                "type": "string[]"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "role",
                "type": "string | GroupMemberRole"
              },
              {
                "name": "muteEndDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "joinGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "quitGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "successorId",
                "type": "string"
              },
              {
                "name": "quitAfterTransfer",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "removeGroupMembers",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "memberIds",
                "type": "string[]"
              }
            ]
          }
        ]
      },
      {
        "name": "updateGroupMemberInfo",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "memberId",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "role",
                "type": "string | GroupMemberRole"
              },
              {
                "name": "muteEndDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "muteGroupMember",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "memberId",
                "type": "string"
              },
              {
                "name": "muteEndDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "unmuteGroupMember",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "memberId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroupMembers",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupMembersWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "withStatus",
                "type": "boolean"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroupMembersByMemberIds",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.GroupMembersWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "memberIds",
                "type": "string[]"
              },
              {
                "name": "withStatus",
                "type": "boolean"
              }
            ]
          }
        ]
      }
    ],
    "constructor": {
      "name": "GroupService",
      "parameters": [
        {
          "name": "turmsClient",
          "type": "TurmsClient"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "MessageAddition",
    "properties": [
      {
        "syntax": "property",
        "name": "isMentioned",
        "type": "boolean",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "mentionedUserIds",
        "type": "string[]",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "recalledMessageIds",
        "type": "string[]",
        "isOptional": false
      }
    ],
    "accessors": [],
    "methods": [],
    "constructor": {
      "name": "MessageAddition",
      "parameters": [
        {
          "name": "isMentioned",
          "type": "boolean"
        },
        {
          "name": "mentionedUserIds",
          "type": "string[]"
        },
        {
          "name": "recalledMessageIds",
          "type": "string[]"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "MessageService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "addMessageListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(message: ParsedModel.Message, messageAddition: MessageAddition) => void"
          }
        ]
      },
      {
        "name": "removeMessageListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(message: ParsedModel.Message, messageAddition: MessageAddition) => void"
          }
        ]
      },
      {
        "name": "sendMessage",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "isGroupMessage",
                "type": "boolean"
              },
              {
                "name": "targetId",
                "type": "string"
              },
              {
                "name": "deliveryDate",
                "type": "Date"
              },
              {
                "name": "text",
                "type": "string"
              },
              {
                "name": "records",
                "type": "Uint8Array[]"
              },
              {
                "name": "burnAfter",
                "type": "number"
              },
              {
                "name": "preMessageId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "forwardMessage",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "messageId",
                "type": "string"
              },
              {
                "name": "isGroupMessage",
                "type": "boolean"
              },
              {
                "name": "targetId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "updateSentMessage",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "messageId",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              },
              {
                "name": "records",
                "type": "Uint8Array[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessages",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.Message[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "ids",
                "type": "string[]"
              },
              {
                "name": "areGroupMessages",
                "type": "boolean"
              },
              {
                "name": "areSystemMessages",
                "type": "boolean"
              },
              {
                "name": "fromIds",
                "type": "string[]"
              },
              {
                "name": "deliveryDateStart",
                "type": "Date"
              },
              {
                "name": "deliveryDateEnd",
                "type": "Date"
              },
              {
                "name": "maxCount",
                "type": "number"
              },
              {
                "name": "descending",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessagesWithTotal",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.MessagesWithTotal[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "ids",
                "type": "string[]"
              },
              {
                "name": "areGroupMessages",
                "type": "boolean"
              },
              {
                "name": "areSystemMessages",
                "type": "boolean"
              },
              {
                "name": "fromIds",
                "type": "string[]"
              },
              {
                "name": "deliveryDateStart",
                "type": "Date"
              },
              {
                "name": "deliveryDateEnd",
                "type": "Date"
              },
              {
                "name": "maxCount",
                "type": "number"
              },
              {
                "name": "descending",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "recallMessage",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "messageId",
                "type": "string"
              },
              {
                "name": "recallDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "isMentionEnabled",
        "syntax": "method",
        "type": "boolean",
        "isOptional": false,
        "parameters": []
      },
      {
        "name": "enableMention",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "mentionedUserIdsParser",
            "type": "(message: ParsedModel.Message) => string[]"
          }
        ]
      }
    ],
    "constructor": {
      "name": "MessageService",
      "parameters": [
        {
          "name": "turmsClient",
          "type": "TurmsClient"
        }
      ]
    }
  },
  {
    "syntax": "type_alias",
    "name": "ParsedRelayedRequest",
    "members": []
  },
  {
    "syntax": "class",
    "name": "Notification",
    "properties": [
      {
        "syntax": "property",
        "name": "timestamp",
        "type": "Date",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "requesterId",
        "type": "string",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "relayedRequest",
        "type": "ParsedRelayedRequest",
        "isOptional": false
      }
    ],
    "accessors": [],
    "methods": [],
    "constructor": {
      "name": "Notification",
      "parameters": [
        {
          "name": "timestamp",
          "type": "Date"
        },
        {
          "name": "requesterId",
          "type": "string"
        },
        {
          "name": "relayedRequest",
          "type": "ParsedRelayedRequest"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "NotificationService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "addNotificationListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(notification: Notification) => void"
          }
        ]
      },
      {
        "name": "removeNotificationListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(notification: Notification) => void"
          }
        ]
      }
    ],
    "constructor": {
      "name": "NotificationService",
      "parameters": [
        {
          "name": "turmsClient",
          "type": "TurmsClient"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "StorageResource",
    "properties": [
      {
        "syntax": "property",
        "name": "uri",
        "type": "string",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "data",
        "type": "Uint8Array",
        "isOptional": false
      }
    ],
    "accessors": [],
    "methods": [],
    "constructor": {
      "name": "StorageResource",
      "parameters": [
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "data",
          "type": "Uint8Array"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "StorageUpdateResult",
    "properties": [
      {
        "syntax": "property",
        "name": "uri",
        "type": "string",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "data",
        "type": "string",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "resourceIdNum",
        "type": "string",
        "isOptional": true
      },
      {
        "syntax": "property",
        "name": "resourceIdStr",
        "type": "string",
        "isOptional": true
      }
    ],
    "accessors": [],
    "methods": [],
    "constructor": {
      "name": "StorageUpdateResult",
      "parameters": [
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "data",
          "type": "string"
        },
        {
          "name": "resourceIdNum",
          "type": "string"
        },
        {
          "name": "resourceIdStr",
          "type": "string"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "StorageService",
    "properties": [],
    "accessors": [
      {
        "syntax": "get_accessor",
        "name": "serverUrl",
        "type": "string"
      },
      {
        "syntax": "set_accessor",
        "name": "serverUrl"
      }
    ],
    "methods": [
      {
        "name": "uploadUserProfilePicture",
        "syntax": "method",
        "type": "Promise<Response<StorageUpdateResult>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "data",
                "type": "Uint8Array"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteUserProfilePicture",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryUserProfilePicture",
        "syntax": "method",
        "type": "Promise<Response<StorageResource>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "fetchDownloadInfo",
                "type": "boolean"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryUserProfilePictureUploadInfo",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryUserProfilePictureDownloadInfo",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "fetch",
                "type": "boolean"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "uploadGroupProfilePicture",
        "syntax": "method",
        "type": "Promise<Response<StorageUpdateResult>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "data",
                "type": "Uint8Array"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteGroupProfilePicture",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroupProfilePicture",
        "syntax": "method",
        "type": "Promise<Response<StorageResource>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "fetchDownloadInfo",
                "type": "boolean"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroupProfilePictureUploadInfo",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryGroupProfilePictureDownloadInfo",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "fetch",
                "type": "boolean"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "uploadMessageAttachment",
        "syntax": "method",
        "type": "Promise<Response<StorageUpdateResult>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "data",
                "type": "Uint8Array"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "uploadMessageAttachmentInPrivateConversation",
        "syntax": "method",
        "type": "Promise<Response<StorageUpdateResult>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "data",
                "type": "Uint8Array"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "uploadMessageAttachmentInGroupConversation",
        "syntax": "method",
        "type": "Promise<Response<StorageUpdateResult>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "data",
                "type": "Uint8Array"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteMessageAttachment",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "attachmentIdNum",
                "type": "string"
              },
              {
                "name": "attachmentIdStr",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "shareMessageAttachmentWithUser",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "attachmentIdNum",
                "type": "string"
              },
              {
                "name": "attachmentIdStr",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "shareMessageAttachmentWithGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "attachmentIdNum",
                "type": "string"
              },
              {
                "name": "attachmentIdStr",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "unshareMessageAttachmentWithUser",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "attachmentIdNum",
                "type": "string"
              },
              {
                "name": "attachmentIdStr",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "unshareMessageAttachmentWithGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "attachmentIdNum",
                "type": "string"
              },
              {
                "name": "attachmentIdStr",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachment",
        "syntax": "method",
        "type": "Promise<Response<StorageResource>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "attachmentIdNum",
                "type": "string"
              },
              {
                "name": "attachmentIdStr",
                "type": "string"
              },
              {
                "name": "fetchDownloadInfo",
                "type": "boolean"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachmentUploadInfo",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachmentUploadInfoInPrivateConversation",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachmentUploadInfoInGroupConversation",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "mediaType",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachmentDownloadInfo",
        "syntax": "method",
        "type": "Promise<Response<Record<string, string>>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "attachmentIdNum",
                "type": "string"
              },
              {
                "name": "attachmentIdStr",
                "type": "string"
              },
              {
                "name": "fetch",
                "type": "boolean"
              },
              {
                "name": "urlKeyName",
                "type": "string"
              },
              {
                "name": "customAttributes",
                "type": "Value[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachmentInfosUploadedByMe",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.StorageResourceInfo[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "creationDateStart",
                "type": "Date"
              },
              {
                "name": "creationDateEnd",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachmentInfosInPrivateConversations",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.StorageResourceInfo[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userIds",
                "type": "string[]"
              },
              {
                "name": "areSharedByMe",
                "type": "boolean"
              },
              {
                "name": "creationDateStart",
                "type": "Date"
              },
              {
                "name": "creationDateEnd",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMessageAttachmentInfosInGroupConversations",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.StorageResourceInfo[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupIds",
                "type": "string[]"
              },
              {
                "name": "userIds",
                "type": "string[]"
              },
              {
                "name": "creationDateStart",
                "type": "Date"
              },
              {
                "name": "creationDateEnd",
                "type": "Date"
              }
            ]
          }
        ]
      }
    ],
    "constructor": {
      "name": "StorageService",
      "parameters": [
        {
          "name": "turmsClient",
          "type": "TurmsClient"
        },
        {
          "name": "storageServerUrl",
          "type": "string"
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "SessionCloseInfo",
    "properties": [
      {
        "name": "closeStatus",
        "type": "number",
        "isOptional": false
      },
      {
        "name": "businessStatus",
        "type": "number",
        "isOptional": true
      },
      {
        "name": "reason",
        "type": "string",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "class",
    "name": "UserLocation",
    "properties": [
      {
        "syntax": "property",
        "name": "longitude",
        "type": "number",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "latitude",
        "type": "number",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "details",
        "type": "Record<string, string>",
        "isOptional": false
      },
      {
        "syntax": "property",
        "name": "customAttributes",
        "type": "Value[]",
        "isOptional": false
      }
    ],
    "accessors": [],
    "methods": [
      {
        "name": "toString",
        "syntax": "method",
        "type": "string",
        "isOptional": false,
        "parameters": []
      }
    ],
    "constructor": {
      "name": "UserLocation",
      "parameters": [
        {
          "name": "longitude",
          "type": "number"
        },
        {
          "name": "latitude",
          "type": "number"
        },
        {
          "name": "details",
          "type": "Record<string, string>"
        },
        {
          "name": "customAttributes",
          "type": "Value[]"
        }
      ]
    }
  },
  {
    "syntax": "interface",
    "name": "UserInfo",
    "properties": [
      {
        "name": "userId",
        "type": "string",
        "isOptional": true
      },
      {
        "name": "password",
        "type": "string",
        "isOptional": true
      },
      {
        "name": "deviceType",
        "type": "DeviceType",
        "isOptional": true
      },
      {
        "name": "deviceDetails",
        "type": "Record<string, string>",
        "isOptional": true
      },
      {
        "name": "onlineStatus",
        "type": "UserStatus",
        "isOptional": true
      },
      {
        "name": "location",
        "type": "UserLocation",
        "isOptional": true
      }
    ],
    "methods": []
  },
  {
    "syntax": "class",
    "name": "UserService",
    "properties": [],
    "accessors": [
      {
        "syntax": "get_accessor",
        "name": "userInfo",
        "type": "UserInfo"
      },
      {
        "syntax": "get_accessor",
        "name": "isLoggedIn",
        "type": "boolean"
      }
    ],
    "methods": [
      {
        "name": "addOnOnlineListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "() => void"
          }
        ]
      },
      {
        "name": "addOnOfflineListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "(sessionCloseInfo: SessionCloseInfo) => void"
          }
        ]
      },
      {
        "name": "removeOnOnlineListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "() => void"
          }
        ]
      },
      {
        "name": "removeOnOfflineListener",
        "syntax": "method",
        "type": "void",
        "isOptional": false,
        "parameters": [
          {
            "name": "listener",
            "type": "() => void"
          }
        ]
      },
      {
        "name": "login",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              },
              {
                "name": "deviceType",
                "type": "string | DeviceType"
              },
              {
                "name": "deviceDetails",
                "type": "Record<string, string>"
              },
              {
                "name": "onlineStatus",
                "type": "string | UserStatus"
              },
              {
                "name": "location",
                "type": "GeolocationPosition | UserLocation"
              },
              {
                "name": "storePassword",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "logout",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "immediate",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "updateOnlineStatus",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "onlineStatus",
                "type": "string | UserStatus"
              }
            ]
          }
        ]
      },
      {
        "name": "disconnectOnlineDevices",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "deviceTypes",
                "type": "string[] | DeviceType[]"
              }
            ]
          }
        ]
      },
      {
        "name": "updatePassword",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "password",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "updateProfile",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "intro",
                "type": "string"
              },
              {
                "name": "profilePicture",
                "type": "string"
              },
              {
                "name": "profileAccessStrategy",
                "type": "string | ProfileAccessStrategy"
              }
            ]
          }
        ]
      },
      {
        "name": "queryUserProfiles",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserInfo[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userIds",
                "type": "string[]"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "searchUserProfiles",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserInfo[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "highlight",
                "type": "boolean"
              },
              {
                "name": "skip",
                "type": "number"
              },
              {
                "name": "limit",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "upsertUserSettings",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "name": "settings",
            "type": "Record<string, any>"
          }
        ]
      },
      {
        "name": "deleteUserSettings",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "name": "names",
            "type": "string[]"
          }
        ]
      },
      {
        "name": "queryUserSettings",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserSettings | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "name": "names",
            "type": "string[]"
          },
          {
            "name": "lastUpdatedDate",
            "type": "Date"
          }
        ]
      },
      {
        "name": "queryNearbyUsers",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.NearbyUser[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "latitude",
                "type": "number"
              },
              {
                "name": "longitude",
                "type": "number"
              },
              {
                "name": "maxCount",
                "type": "number"
              },
              {
                "name": "maxDistance",
                "type": "number"
              },
              {
                "name": "withCoordinates",
                "type": "boolean"
              },
              {
                "name": "withDistance",
                "type": "boolean"
              },
              {
                "name": "withUserInfo",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "queryOnlineStatuses",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserOnlineStatus[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userIds",
                "type": "string[]"
              }
            ]
          }
        ]
      },
      {
        "name": "queryRelationships",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserRelationshipsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "relatedUserIds",
                "type": "string[]"
              },
              {
                "name": "isBlocked",
                "type": "boolean"
              },
              {
                "name": "groupIndexes",
                "type": "number[]"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryRelatedUserIds",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.LongsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "isBlocked",
                "type": "boolean"
              },
              {
                "name": "groupIndexes",
                "type": "number[]"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryFriends",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserRelationshipsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupIndexes",
                "type": "number[]"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "queryBlockedUsers",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserRelationshipsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupIndexes",
                "type": "number[]"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "createRelationship",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "isBlocked",
                "type": "boolean"
              },
              {
                "name": "groupIndex",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "createFriendRelationship",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "groupIndex",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "createBlockedUserRelationship",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "groupIndex",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteRelationship",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "relatedUserId",
                "type": "string"
              },
              {
                "name": "deleteGroupIndex",
                "type": "number"
              },
              {
                "name": "targetGroupIndex",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "updateRelationship",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "relatedUserId",
                "type": "string"
              },
              {
                "name": "isBlocked",
                "type": "boolean"
              },
              {
                "name": "groupIndex",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "sendFriendRequest",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "recipientId",
                "type": "string"
              },
              {
                "name": "content",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteFriendRequest",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "requestId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "replyFriendRequest",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "requestId",
                "type": "string"
              },
              {
                "name": "responseAction",
                "type": "string | ResponseAction"
              },
              {
                "name": "reason",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryFriendRequests",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserFriendRequestsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "areSentByMe",
                "type": "boolean"
              },
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "createRelationshipGroup",
        "syntax": "method",
        "type": "Promise<Response<number>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "name",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteRelationshipGroups",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupIndex",
                "type": "number"
              },
              {
                "name": "targetGroupIndex",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "updateRelationshipGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "groupIndex",
                "type": "number"
              },
              {
                "name": "newName",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryRelationshipGroups",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.UserRelationshipGroupsWithVersion | undefined>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "lastUpdatedDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "moveRelatedUserToGroup",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "relatedUserId",
                "type": "string"
              },
              {
                "name": "groupIndex",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "updateLocation",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "latitude",
                "type": "number"
              },
              {
                "name": "longitude",
                "type": "number"
              },
              {
                "name": "details",
                "type": "Record<string, string>"
              }
            ]
          }
        ]
      }
    ],
    "constructor": {
      "name": "UserService",
      "parameters": [
        {
          "name": "turmsClient",
          "type": "TurmsClient"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "ConferenceService",
    "properties": [],
    "accessors": [],
    "methods": [
      {
        "name": "createMeeting",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "userId",
                "type": "string"
              },
              {
                "name": "groupId",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "intro",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              },
              {
                "name": "startDate",
                "type": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "cancelMeeting",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "meetingId",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "updateMeeting",
        "syntax": "method",
        "type": "Promise<Response<void>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "meetingId",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "intro",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "queryMeetings",
        "syntax": "method",
        "type": "Promise<Response<ParsedModel.Meeting[]>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "meetingIds",
                "type": "string[]"
              },
              {
                "name": "creatorIds",
                "type": "string[]"
              },
              {
                "name": "userIds",
                "type": "string[]"
              },
              {
                "name": "groupIds",
                "type": "string[]"
              },
              {
                "name": "creationDateStart",
                "type": "Date"
              },
              {
                "name": "creationDateEnd",
                "type": "Date"
              },
              {
                "name": "skip",
                "type": "number"
              },
              {
                "name": "limit",
                "type": "number"
              }
            ]
          }
        ]
      },
      {
        "name": "acceptMeetingInvitation",
        "syntax": "method",
        "type": "Promise<Response<string>>",
        "isOptional": false,
        "parameters": [
          {
            "members": [
              {
                "name": "meetingId",
                "type": "string"
              },
              {
                "name": "password",
                "type": "string"
              }
            ]
          }
        ]
      }
    ],
    "constructor": {
      "name": "ConferenceService",
      "parameters": [
        {
          "name": "turmsClient",
          "type": "TurmsClient"
        }
      ]
    }
  },
  {
    "syntax": "class",
    "name": "TurmsClient",
    "properties": [],
    "accessors": [
      {
        "syntax": "get_accessor",
        "name": "driver",
        "type": "TurmsDriver"
      },
      {
        "syntax": "get_accessor",
        "name": "userService",
        "type": "UserService"
      },
      {
        "syntax": "get_accessor",
        "name": "groupService",
        "type": "GroupService"
      },
      {
        "syntax": "get_accessor",
        "name": "conversationService",
        "type": "ConversationService"
      },
      {
        "syntax": "get_accessor",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "syntax": "get_accessor",
        "name": "storageService",
        "type": "StorageService"
      },
      {
        "syntax": "get_accessor",
        "name": "conferenceService",
        "type": "ConferenceService"
      },
      {
        "syntax": "get_accessor",
        "name": "notificationService",
        "type": "NotificationService"
      }
    ],
    "methods": [
      {
        "name": "close",
        "syntax": "method",
        "type": "Promise<void>",
        "isOptional": false,
        "parameters": []
      }
    ],
    "constructor": {
      "name": "TurmsClient",
      "parameters": [
        {
          "name": "wsUrl",
          "type": "string"
        },
        {
          "name": "connectionTimeout",
          "type": "number"
        },
        {
          "name": "requestTimeout",
          "type": "number"
        },
        {
          "name": "minRequestInterval",
          "type": "number"
        },
        {
          "name": "heartbeatInterval",
          "type": "number"
        },
        {
          "name": "storageServerUrl",
          "type": "string"
        },
        {
          "name": "useSharedContext",
          "type": "boolean"
        }
      ]
    }
  }
]